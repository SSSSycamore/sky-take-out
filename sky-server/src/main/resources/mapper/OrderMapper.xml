<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id, order_time,
                            pay_method, pay_status, amount, remark, phone, address, user_name,
                            consignee,estimated_delivery_time, delivery_status,
                            pack_amount, tableware_number, tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime},
               #{payMethod}, #{payStatus}, #{amount}, #{remark},
                #{phone}, #{address}, #{userName}, #{consignee},
                 #{estimatedDeliveryTime},#{deliveryStatus}, #{packAmount},
                #{tablewareNumber}, #{tablewareStatus})
    </insert>

    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">cancel_reason=#{cancelReason},</if>
            <if test="rejectionReason != null and rejectionReason!='' ">rejection_reason=#{rejectionReason},</if>
            <if test="cancelTime != null">cancel_time=#{cancelTime},</if>
            <if test="payStatus != null">pay_status=#{payStatus},</if>
            <if test="payMethod != null">pay_method=#{payMethod},</if>
            <if test="checkoutTime != null">checkout_time=#{checkoutTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="deliveryTime != null">delivery_time = #{deliveryTime}</if>
        </set>
        where id = #{id}
    </update>

    <select id="getByUserIdAndStatus" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="conditionSearch" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="number != null">
                and number like concat('%',#{number},'%')
            </if>
            <if test="phone != null">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
    </select>
    <update id="updateByIds">
        update orders
        <set>
            <if test="cancelReason != null">cancel_reason = #{cancelReason},</if>
            <if test="cancelTime != null">cancel_time = #{cancelTime},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <select id="turnoverStatistic" resultType="java.util.Map">
        select date(order_time) as date,
               coalesce(sum(amount),0.0) as amount
        from orders
        where status = #{status}
        and date(order_time) between date(#{begin}) and date(#{end})
        group by date(order_time)
        order by date(order_time)
    </select>
    <select id="getCountByStatusAndTime" resultType="java.lang.Integer">
        select count(id) from orders
        <where>
            <if test="status != null">status = #{status}</if>
            <if test="date != null">and date(order_time) = date(#{date})</if>
        </where>
    </select>
    <select id="top10" resultType="com.sky.dto.GoodsSalesDTO">
        select sum(od.number) as number,
               od.name as name
        from order_detail as od,orders
        where od.order_id = orders.id
        and orders.status = 5
        and date(orders.order_time) between date(#{begin}) and date(#{end})
        group by name
        order by number desc
        limit 0,10
    </select>
    <select id="getSumByStatusAndTime" resultType="java.lang.Double">
        select sum(amount) from orders
        <where>
            <if test="status != null">status = #{status}</if>
            <if test="date != null">and date(order_time) = date(#{date})</if>
        </where>
    </select>
</mapper>
